<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2"
		assembly="NHibernate.Envers.Tests"
		namespace="NHibernate.Envers.Tests.NetSpecific.UnitTests.Interfaces">

	<class name="AuditParent" table="AuditParent" lazy="true">
		<id name="Id" access="property" column="Id" type="Guid" unsaved-value="00000000-0000-0000-0000-000000000000">
			<generator class="guid.comb">
			</generator>
		</id>
		<property name="Name" access="field.camelcase-underscore" type="String">
			<column name="Name" />
		</property>
		<property name="Value" access="field.camelcase-underscore" type="String">
			<column name="Value" />
		</property>
		<bag name="Children" table="AuditChild" lazy="true" inverse="true" optimistic-lock="false"
					access="NHibernate.Envers.Tests.NetSpecific.UnitTests.CustomLists.InternalPropertyAccessor,NHibernate.Envers.Tests"
					collection-type="ObservableBagType`1[[IAuditChild]]">
			<key column="AuditParentId" />
			<one-to-many class="AuditChild" />
		</bag>
	</class>

	<class name="AuditChild" table="AuditChild" lazy="true">
		<id name="Id" access="property" column="Id" type="Guid" unsaved-value="00000000-0000-0000-0000-000000000000">
			<generator class="guid.comb">
			</generator>
		</id>
		<property name="ChildValue" access="field.camelcase-underscore" type="Int32">
			<column name="ChildValue" />
		</property>
		<property name="ChildName" access="field.camelcase-underscore" type="String">
			<column name="ChildName" />
		</property>
		<many-to-one name="AuditParent" access="field.camelcase-underscore" class="AuditParent" column="AuditParentId" lazy="proxy" />
	</class>
</hibernate-mapping>

