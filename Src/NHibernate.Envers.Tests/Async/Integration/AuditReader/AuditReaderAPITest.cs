//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using NHibernate.Envers.Exceptions;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.Integration.AuditReader
{
	using System.Threading.Tasks;
	public partial class AuditReaderAPITest : TestBase
	{

		[Test]
		public async Task ShouldAuditAsync()
		{
			AuditReader().IsEntityClassAudited(typeof (AuditedTestEntity))
				.Should().Be.True();
			AuditReader().IsEntityNameAudited(typeof(AuditedTestEntity).FullName)
				.Should().Be.True();
			(await (AuditReader().GetRevisionsAsync(typeof(AuditedTestEntity),1)).ConfigureAwait(false))
				.Should().Have.SameSequenceAs(1, 2);
		}

		[Test]
		public void ShouldNotAuditAsync()
		{
			AuditReader().IsEntityClassAudited(typeof(NotAuditedTestEntity))
				.Should().Be.False();
			AuditReader().IsEntityNameAudited(typeof(NotAuditedTestEntity).FullName)
				.Should().Be.False();

			Assert.ThrowsAsync<NotAuditedException>(() =>
			   AuditReader().GetRevisionsAsync(typeof(NotAuditedTestEntity), 1));
		}
	}
}