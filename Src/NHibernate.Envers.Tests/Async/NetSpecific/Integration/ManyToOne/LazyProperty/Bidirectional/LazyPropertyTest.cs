//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by AsyncGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using System.Linq;
using NUnit.Framework;
using SharpTestsEx;

namespace NHibernate.Envers.Tests.NetSpecific.Integration.ManyToOne.LazyProperty.Bidirectional
{
	using System.Threading.Tasks;
	public partial class LazyPropertyBidirectionalTest : TestBase
	{

		[Test]
		public async Task SavePersonProxyForFieldInterceptorAsync()
		{
			long carId;
			using (var tx = Session.BeginTransaction())
			{
				var pers = Session.Query<Person>().Single(x => x.Id == id_pers1);
				var car = new Car
				{
					Owner = pers
				};
				pers.Cars.Add(car);
				carId = (long) await (Session.SaveAsync(car)).ConfigureAwait(false);
				await (tx.CommitAsync()).ConfigureAwait(false);
			}

			(await (AuditReader().FindAsync<Car>(carId, 2)).ConfigureAwait(false)).Owner.Name
				.Should().Be.EqualTo("Hernan");
		}
	}
}